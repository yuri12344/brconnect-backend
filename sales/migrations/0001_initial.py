# Generated by Django 4.2.2 on 2023-06-30 20:20

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import sales.models
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Coleção',
                'verbose_name_plural': 'Coleções',
                'db_table': 'collections',
            },
        ),
        migrations.CreateModel(
            name='CollectionProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Data adicionado')),
            ],
            options={
                'verbose_name': 'Produto da Collection',
                'verbose_name_plural': 'Produtos da Collection',
                'db_table': 'collection_products',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='Codigo')),
                ('discount', models.IntegerField(default=0, help_text='Desconto em %', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Desconto')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('expires_at', models.DateTimeField(default=sales.models.get_expiration_date, verbose_name='Expira em: ')),
            ],
            options={
                'verbose_name': 'Cupom',
                'verbose_name_plural': 'Cupons',
                'db_table': 'coupons',
            },
        ),
        migrations.CreateModel(
            name='HistoricalOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total')),
                ('payment_method', models.CharField(choices=[('D', 'Dinheiro'), ('C', 'Cartão'), ('B', 'Boleto'), ('P', 'Pix')], default='P', max_length=255, verbose_name='Metodo de pagamento')),
                ('paid', models.BooleanField(choices=[(True, 'Pago'), (False, 'Não pago')], default=False, verbose_name='Pago')),
                ('paid_at', models.DateTimeField(blank=True, editable=False, verbose_name='Pago em: ')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Criado em: ')),
                ('expires_at', models.DateTimeField(default=sales.models.get_expiration_date, verbose_name='Expira em: ')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Pedido',
                'verbose_name_plural': 'historical Pedidos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total')),
                ('payment_method', models.CharField(choices=[('D', 'Dinheiro'), ('C', 'Cartão'), ('B', 'Boleto'), ('P', 'Pix')], default='P', max_length=255, verbose_name='Metodo de pagamento')),
                ('paid', models.BooleanField(choices=[(True, 'Pago'), (False, 'Não pago')], default=False, verbose_name='Pago')),
                ('paid_at', models.DateTimeField(auto_now_add=True, verbose_name='Pago em: ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em: ')),
                ('expires_at', models.DateTimeField(default=sales.models.get_expiration_date, verbose_name='Expira em: ')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='ProductOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantidade')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_order_items', to='sales.order', verbose_name='Pedido')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Item do Pedido',
                'verbose_name_plural': 'Itens do Pedido',
                'db_table': 'product_order_items',
            },
        ),
    ]
