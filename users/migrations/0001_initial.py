# Generated by Django 4.2.3 on 2024-02-13 21:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('sales', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Rua')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, null=True, verbose_name='Estado')),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='CEP')),
                ('phone', models.CharField(blank=True, max_length=17, null=True, verbose_name='Numero de telefone')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('website', models.URLField(blank=True, max_length=255, null=True, verbose_name='Website')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('chave_pix', models.CharField(blank=True, max_length=255, null=True, verbose_name='Chave Pix')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Data Atualização')),
                ('cnpj', models.CharField(blank=True, max_length=255, null=True, verbose_name='CNPJ')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Logo')),
                ('industry', models.CharField(blank=True, choices=[('beauty', 'Beleza'), ('ecommerce', 'E-commerce'), ('education', 'Educação'), ('finance', 'Finanças'), ('food', 'Alimentação'), ('health', 'Saúde'), ('manufacturing', 'Manufatura'), ('other', 'Outro'), ('retail', 'Varejo'), ('services', 'Serviços'), ('tech', 'Tecnologia')], max_length=255, null=True, verbose_name='Indústria')),
                ('order_expiration_days', models.PositiveIntegerField(default=7, verbose_name='Dias para expiração do pedido não pago e não enviado')),
                ('employee_count', models.IntegerField(blank=True, choices=[(1, '1-10'), (2, '11-50'), (3, '51-200'), (4, '201-500'), (5, '501-1000'), (6, '1001-5000'), (7, '5001-10,000'), (8, '10,001+')], null=True, verbose_name='Quantidade de Funcionários')),
                ('whatsapp_service', models.CharField(choices=[('wppconnect', 'WppConnect'), ('baileys', 'Baileys')], default='wppconnect', max_length=255)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company', to=settings.AUTH_USER_MODEL, verbose_name='Criador')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='WhatsApp')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Logradouro')),
                ('number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Complemento')),
                ('neighborhood', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bairro')),
                ('zip', models.CharField(blank=True, max_length=255, null=True, verbose_name='CEP')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, null=True, verbose_name='Estado')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('score', models.IntegerField(default=0, verbose_name='Score')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Idade')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1, null=True, verbose_name='Gênero')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.company', verbose_name='Empresa')),
                ('favorite_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loved_by', to='products.product', verbose_name='Produto Favorito')),
                ('preferences', models.ManyToManyField(blank=True, to='products.product', verbose_name='Preferências de Produto')),
                ('purchase_history', models.ManyToManyField(blank=True, related_name='purchasing_customers', to='sales.order', verbose_name='Histórico de Pedidos')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('regiao', models.CharField(max_length=255, verbose_name='Regiao')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Custo frete')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.company', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Região',
                'verbose_name_plural': 'Regiões',
                'db_table': 'regions',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=17, null=True, verbose_name='Numero de telefone')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='WhatsApp')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Logradouro')),
                ('number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Complemento')),
                ('neighborhood', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bairro')),
                ('zip', models.CharField(blank=True, max_length=255, null=True, verbose_name='CEP')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, null=True, verbose_name='Estado')),
                ('cnpj', models.CharField(blank=True, max_length=255, null=True, verbose_name='CNPJ')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('chave_pix', models.CharField(blank=True, max_length=255, null=True, verbose_name='Chave Pix')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suppliers', to='users.company', verbose_name='Empresa')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupplierProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(verbose_name='Descrição')),
                ('status', models.CharField(choices=[('not_requested', 'Não solicitado'), ('requested', 'Solicitado'), ('delivered', 'Entregue')], default='not_requested', max_length=20, verbose_name='Status da Solicitação')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.company', verbose_name='Empresa')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.supplier')),
            ],
            options={
                'unique_together': {('supplier', 'product')},
            },
        ),
        migrations.AddField(
            model_name='supplier',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='suppliers', through='users.SupplierProduct', to='products.product', verbose_name='Produtos'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.region', verbose_name='Regiao'),
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(default='Interação', max_length=255, verbose_name='Nome')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Data da Interação')),
                ('score', models.IntegerField(default=5, verbose_name='Pontuação')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.company', verbose_name='Empresa')),
                ('customers', models.ManyToManyField(blank=True, related_name='interactions', to='users.customer', verbose_name='Clientes')),
            ],
            options={
                'verbose_name': 'Interação',
                'verbose_name_plural': 'Interações',
                'db_table': 'interactions',
            },
        ),
        migrations.CreateModel(
            name='CustomerGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=50, verbose_name='Nome do Grupo')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.company', verbose_name='Empresa')),
                ('customers', models.ManyToManyField(blank=True, related_name='groups', to='users.customer', verbose_name='Clientes')),
            ],
            options={
                'verbose_name': 'Grupos de cliente',
                'verbose_name_plural': 'Grupos de clientes',
                'db_table': 'customer_groups',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.region', verbose_name='Regiao'),
        ),
        migrations.AlterUniqueTogether(
            name='customer',
            unique_together={('whatsapp', 'company')},
        ),
    ]
