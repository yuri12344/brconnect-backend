# Generated by Django 4.2.2 on 2023-07-03 16:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('sales', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Rua')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estado')),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='CEP')),
                ('phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Telefone deve ser inserido no formato correto: '+554187941579'. Até 15 digitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Numero de telefone')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('website', models.URLField(blank=True, max_length=255, null=True, verbose_name='Website')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Data Criação')),
                ('chave_pix', models.CharField(blank=True, max_length=255, null=True, verbose_name='Chave Pix')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Data Atualização')),
                ('cnpj', models.CharField(blank=True, max_length=255, null=True, verbose_name='CNPJ')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Logo')),
                ('industry', models.CharField(blank=True, choices=[('beauty', 'Beleza'), ('ecommerce', 'E-commerce'), ('education', 'Educação'), ('finance', 'Finanças'), ('food', 'Alimentação'), ('health', 'Saúde'), ('manufacturing', 'Manufatura'), ('other', 'Outro'), ('retail', 'Varejo'), ('services', 'Serviços'), ('tech', 'Tecnologia')], max_length=255, null=True, verbose_name='Indústria')),
                ('order_expiration_days', models.PositiveIntegerField(default=7, verbose_name='Dias para expiração do pedido não pago e não enviado')),
                ('employee_count', models.IntegerField(blank=True, choices=[(1, '1-10'), (2, '11-50'), (3, '51-200'), (4, '201-500'), (5, '501-1000'), (6, '1001-5000'), (7, '5001-10,000'), (8, '10,001+')], null=True, verbose_name='Quantidade de Funcionários')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company', to=settings.AUTH_USER_MODEL, verbose_name='Criador')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Street')),
                ('state', models.CharField(blank=True, max_length=255, null=True, verbose_name='State')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('zip', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zip Code')),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Telefone deve ser inserido no formato correto: '+554187941579'. Até 15 digitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone Number')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('score', models.IntegerField(default=0, verbose_name='Score')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Idade')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True, verbose_name='Gênero')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='WhatsApp Number')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', related_query_name='customer', to='users.company', verbose_name='Company')),
                ('favorite_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loved_by', to='products.product', verbose_name='Produto Favorito')),
                ('preferences', models.ManyToManyField(blank=True, to='products.product', verbose_name='Preferências de Produto')),
                ('purchase_history', models.ManyToManyField(blank=True, related_name='purchasing_customers', to='sales.order', verbose_name='Histórico de Pedidos')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'customers',
                'unique_together': {('email', 'company')},
            },
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Interação', max_length=255, verbose_name='Nome')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Data da Interação')),
                ('score', models.IntegerField(default=5, verbose_name='Pontuação')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='users.company', verbose_name='Empresa')),
                ('customers', models.ManyToManyField(blank=True, related_name='interactions', to='users.customer', verbose_name='Clientes')),
            ],
            options={
                'verbose_name': 'Interação',
                'verbose_name_plural': 'Interações',
                'db_table': 'interactions',
            },
        ),
        migrations.CreateModel(
            name='CustomerGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nome do Grupo')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='users.company', verbose_name='Empresa')),
                ('customers', models.ManyToManyField(blank=True, related_name='groups', to='users.customer', verbose_name='Clientes')),
            ],
            options={
                'verbose_name': 'Grupos de cliente',
                'verbose_name_plural': 'Grupos de clientes',
                'db_table': 'customer_groups',
            },
        ),
    ]
